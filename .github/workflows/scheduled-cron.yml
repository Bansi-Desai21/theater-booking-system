name: Run Movie Cron Jobs

on:
  schedule:
    - cron: "30 6 * * *" # Runs at 12:00 AM IST (6:30 AM UTC)
    - cron: "40 6 * * *" # Runs at 12:10 AM IST (6:40 AM UTC)
  workflow_dispatch: # Allows manual triggering

jobs:
  run-cron-jobs:
    runs-on: ubuntu-latest

    steps:
      - name: Store API Key in Environment
        run: |
          echo "CRON_API_KEY=${{ secrets.CRON_API_KEY }}" >> $GITHUB_ENV

      - name: Debug API Key
        run: |
          echo "Stored API Key: $CRON_API_KEY"  


      - name: Sync Movies (Debugging)
        run: |
          echo "Calling Sync Movies API..."
          RESPONSE=$(curl -s -w "\nHTTP_CODE:%{http_code}" -X GET "https://theater-booking-system.onrender.com/cron/sync" \
          -H "Authorization: Bearer $CRON_API_KEY")
          echo "API Response: $RESPONSE"
          STATUS_CODE=$(echo "$RESPONSE" | grep "HTTP_CODE" | cut -d':' -f2)
          if [ "$STATUS_CODE" -ne 200 ]; then
            echo "❌ Sync Movies API failed with status code: $STATUS_CODE"
            exit 1
          fi

      - name: Delete Old Movies (Debugging)
        run: |
          echo "Calling Delete Old Movies API..."
          RESPONSE=$(curl -s -w "\nHTTP_CODE:%{http_code}" -X GET "https://theater-booking-system.onrender.com/cron/delete-movies" \
          -H "Authorization: Bearer $CRON_API_KEY")
          echo "API Response: $RESPONSE"
          STATUS_CODE=$(echo "$RESPONSE" | grep "HTTP_CODE" | cut -d':' -f2)
          if [ "$STATUS_CODE" -ne 200 ]; then
            echo "❌ Delete Old Movies API failed with status code: $STATUS_CODE"
            exit 1
          fi
